.car-page
  - @car.photos.sorted.each_with_index do |photo, index|
    .car-photo
      = attachment_image_tag photo, :image, :fit, 1920, 1280

      - if index == 0
        .caption
          = cell :nav

          .heading.text-center
            = link_to profile_path(@car.user), class: 'profile-avatar large' do
              .initials= @car.user.initials
              - if @car.user.avatar
                = attachment_image_tag @car.user, :avatar, :fit, 100, 100, size: '100x100'

            h2= @car.user

            h1
              = @car
              .small= @car.description

  .container
    .pull-right Views: #{@car.hits}

    h1.text-center= @car

    .text-center
      h2
        div
          = link_to profile_path(@car.user), class: 'profile-avatar large' do
            .initials= @car.user.initials
            - if @car.user.avatar
              = attachment_image_tag @car.user, :avatar, :fit, 100, 100, size: '100x100'
        = @car.user

.container
  .comments
    .row
      .col-xs-12.col-sm-offset-2.col-sm-8
        hr
        h3
          .sprite.sprite-chat-bubble
          'Comments

        - if signed_in?
          = form_for Comment.new, url: user_car_comments_path, html: { class: 'media new-comment' } do |f|
            = hidden_field_tag :return_to, request.original_url
            .media-left
              .profile-avatar
                .initials= current_user.initials
                - if current_user.avatar
                  img.media-object.avatar src=attachment_url(current_user, :avatar, :fit, 70, 70) width="70" height="70"

            .media-body
              = f.text_area :body, class: 'form-control', rows: 6
              = f.submit 'Post', class: 'btn btn-green pull-right'

        - @car.comments.each do |comment|
          .media.comment
            .media-left
              = link_to profile_path(comment.user), class: 'profile-avatar' do
                .initials= comment.user.decorate.initials
                - if comment.user.avatar
                  img.media-object.avatar src=attachment_url(comment.user, :avatar, :fit, 70, 70) width="70" height="70"

            .media-body
              h4.media-heading.clearfix
                = comment.user.to_s
                .small.created-at= comment.created_at.strftime('%a %b %d %Y at %l:%M%P')

              - if policy(comment).destroy?
                .pull-right
                  = link_to user_car_comment_path(@car, comment, return_to: profile_car_path(@car.user, @car)), title: 'Delete this comment', method: :delete, data: { confirm: 'Are you sure?' } do
                    .fa.fa-trash-o

              = simple_format comment.body
