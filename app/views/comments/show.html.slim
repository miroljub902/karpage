- comment = @comment
- commentable = comment.commentable

.container
  .comments
    .row
      .col-xs-12.col-sm-offset-2.col-sm-8
        h2 Comment on #{comment.commentable}
        = link_to 'Back', comment.commentable_path
        .comment-list data-commentable-type=comment.commentable_type data-commentable-id=comment.commentable_id
          .media.comment data-id=comment.id
            .media-left
              = link_to profile_path(comment.user), class: 'profile-avatar' do
                .initials= comment.user.decorate.initials
                - if comment.user.avatar
                  img.media-object.avatar src=ix_refile_image_url(comment.user, :avatar, auto: 'enhance,format', fit: 'crop', w: 70, h: 70) width="70" height="70"

            .media-body
              h4.media-heading.clearfix
                = comment.user.to_s
                .small.created-at= comment.created_at.strftime('%a %b %d %Y at %l:%M%P')

              .pull-right
                - if policy(comment).destroy?
                  = link_to [comment, { return_to: profile_car_path(commentable.user, commentable) }], title: 'Delete this comment', method: :delete, data: { remote: true, confirm: 'Are you sure?' } do
                    .fa.fa-trash-o

                - if policy(comment).reply?
                  a.m-l-1.btn-plain href="#comment-#{comment.id}__reply" data-toggle="collapse"
                    .fa.fa-comment-o
                    span Reply

              = simple_format comment.body

              - if link ||= false
                = link_to link_text, link

              - if policy(comment).reply?
                = form_for Comment.new(commentable: comment),
                  url: comment_comments_path(comment),
                  remote: true,
                  html: { id: "comment-#{comment.id}__reply", class: 'new-comment collapse clearfix m-t-3' },
                  data: { 'commentable-type': 'Comment', 'commentable-id': comment.id } do |f|

                  = hidden_field_tag 'return_to', comment_comments_path(comment.id)
                  = f.text_area :body, class: 'form-control js-mentions', rows: 6
                  = f.submit 'Reply', class: 'btn btn-green pull-right'

              - unless commentable.is_a?(Comment)
                .comment-list data-commentable-type="Comment" data-commentable-id=comment.id
                  h3.m-t-3
                    .sprite.sprite-chat-bubble
                      span.comments-count data-commentable-type='Comment' data-commentable-id=comment.id = comment.comments_count
                    'Replies

                  = render partial: "comments/comment", collection: comment.comments, as: :comment, commentable: comment
