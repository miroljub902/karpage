- car = f.object
h5.text-center Upload up to 10 photos

p.text-center
  i.text-muted Drag photos to rearrange them

.photos[data-create-url=(user_car_photos_path(car) if car.persisted?)
  data-update-url=(user_car_photo_path(car, id: '_ID_') if car.persisted?)
  data-sort-url=(reorder_user_car_photos_path(car) if car.persisted?)]
  ul.sortable
    / No AR sort because we'll have non-saved photos for new cars
    - car.photos.sort_by(&:sorting).each_with_index do |photo, n|
      li.photo.has-photo.sortable data-id=photo.id
        .img style="background-image: url(#{photo.image_url(:fill, 180, 100)})"
          .remove.sprite.sprite-delete
        span.index= n + 1
        - if photo.new_record?
          = f.fields_for :photos, [photo] do |pf|
            = pf.hidden_field :image_id
            = pf.hidden_field :image_content_type
            = pf.hidden_field :image_size
            = pf.hidden_field :image_filename
            = pf.hidden_field :sorting, class: 'sorting'

    - (1..10 - car.photos.size).each do |n|
      li.photo
        .img
          .remove.sprite.sprite-delete
        span.index= n + car.photos.size

  .col-md-offset-2.col-md-8
    input.car-photos[type="file" multiple data-prefix="store"
      data-s3-signer=s3_signatures_path data-s3-key=(ENV['S3_ACCESS_KEY']) data-s3-host=(ENV['S3_HOST']) data-s3-bucket=(ENV['S3_BUCKET'])]
    a.btn.btn-default.btn-block.btn-lg.car-photo-upload class=('disabled' if car.photos.size == 10) href="#"
      = car.photos.any? ? 'Add More Photos' : 'Add Photos'
