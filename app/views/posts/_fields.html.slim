= f.hidden_field :post_channel_id
.title = f.object.persisted? ? 'Update Post' : 'Post Update'
= f.text_area :body, rows: 8, class: 'form-control js-mentions', placeholder: f.object.persisted? ? '' : 'Post pictures of your car, pictures from car events, car spotting, or anything in between...'

- if f.object.persisted? && !f.object.video
  = f.file_field :photo, accept: 'image/*'
  .photobutton-container class=(f.object.photo ? 'single' : 'dropdown')
    .photobutton.post__photo-btn.with-preview.single
      .preview
        = ix_refile_image_tag(f.object, :photo, auto: 'format', fit: 'clip', w: 100, h: 46, alt: '', size: '100x46')
        .remove.sprite.sprite-delete

    .photobutton.dropdown
      .preview
        img width="100" height="46"
        .remove.sprite.sprite-delete

      .btn.btn-default.btn-lg href="#" data-toggle="dropdown"
        = image_tag 'photo-white.png', class: 'icon', size: '28x22'
        span.text
          'Photo&nbsp;
          span.caret

      ul.dropdown-menu
        li
          a.post__photo-btn href="#post__photo" Add Photo
        li
          a.post__album-btn href="#post__album" Add Album
        li
          a.post__album-btn href="#post__video" Add Video

  .tab-content
    #post__album.tab-pane.m-b-2 class=('active' if f.object.photos.size > 0)
      = Views::AlbumForm.render(form: f, max_photos: PostPolicy.new(current_user, f.object).max_photos, attachable: :post)

    #post__video.tab-pane.m-b-2 class=('active' if f.object.photos.size > 0)
      .m-t-6= Views::VideoForm.render(form: f, url_base: :post, attachable: :post)

.submit= f.submit f.object.persisted? ? 'Update Post' : 'Post', class: 'btn btn-default btn-lg'
