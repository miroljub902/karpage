- show_comments = true unless defined?(show_comments)
- truncate = false unless defined?(truncate)
.post-item.row
  .col-md-6
    .thumbnail class="#{'has-photo' if post.cover_photo}"
      - photos = (post.photos.presence || [post.photo]).compact.presence
      - if photos
        .post__photos
          - photos.each do |photo|
            - if photo.is_a?(Photo)
              = link_to ix_refile_image_url(photo, :image, auto: 'enhance,format', format: 'auto', h: 1024), data: { lightbox: "post-#{post.id}" } do
                .img style="background-image: url(#{ix_refile_image_url(photo, :image, auto: 'enhance,format', format: 'auto', fit: 'clip', h: 250)})"
            - else
              = link_to ix_refile_image_url(post, :photo, h: 1024), data: { lightbox: "post-#{post.id}" } do
                .img style="background-image: url(#{ix_refile_image_url(post, :photo, auto: 'enhance,format', format: 'auto', fit: 'clip', h: 250)})"
      - elsif post.video
        .duv= render 'video', post: post, caption: false, width: 553, height: 250
      - else
        .img class="empty"

      .car-card
        .actions.clearfix
          .pull-left.profile-avatar.m-r-1.small
            .initials= post.user.initials
            - if post.user.avatar
              img.media-object.avatar src=ix_refile_image_url(post.user, :avatar, format: 'auto', fit: 'crop', w: 45, h: 45) width="45" height="45"
          .user
            = post.user
            .location= post.user.location

  .col-md-6
    = link_to post.created_at.strftime('%B %d, %Y - %l:%M %p'), post_path(post.user, post), class: 'date'
    .body= truncate ? post.truncated_body : post.html_body
    - if my_profile? && post.user_id == current_user.id
      .actions
        = link_to 'Edit Post', edit_user_post_path(post)
        '  &bull;
        = link_to 'Delete Post', user_post_path(post), method: :delete, data: { confirm: 'Are you sure?' }
    - else
      'by
      = link_to post.user, profile_path(post.user)

    - if show_comments
      .comments
        - if signed_in?
          = form_for Comment.new, url: user_post_comments_path(post), html: { class: 'media new-comment m-t-2' } do |f|
            = hidden_field_tag :return_to, request.original_url
            .media-body
              = f.text_area :body, class: 'form-control js-mentions', rows: 6
              = f.submit 'Comment', class: 'btn btn-green pull-right'

        = render partial: 'comments/comment', collection: post.comments, as: :comment
    - else
      .text-center.m-t-2
        = link_to 'Reply', post_path(post.user, post), class: 'btn btn-default'
